// <auto-generated />
using System;
using Hackathon.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hackathon.Migrations
{
    [DbContext(typeof(HackathonDbContext))]
    partial class HackathonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hackathon.Models.Course", b =>
                {
                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("CourseId");

                    b.ToTable("course", (string)null);
                });

            modelBuilder.Entity("Hackathon.Models.Lecture", b =>
                {
                    b.Property<Guid>("LectureId")
                        .HasColumnType("uuid")
                        .HasColumnName("lecture_id");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid")
                        .HasColumnName("course_id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LectDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("lect_date");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("LectureId");

                    b.HasIndex("CourseId");

                    b.ToTable("lecture", (string)null);
                });

            modelBuilder.Entity("Hackathon.Models.SessionHandler", b =>
                {
                    b.Property<Guid>("SessionId")
                        .HasColumnType("uuid")
                        .HasColumnName("session_id");

                    b.Property<DateTime>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_time")
                        .HasDefaultValueSql("now()");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("UserJwt")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_jwt");

                    b.HasKey("SessionId")
                        .HasName("session_handler_pkey");

                    b.HasIndex("UserId");

                    b.ToTable("session_handler", (string)null);
                });

            modelBuilder.Entity("Hackathon.Models.UserData", b =>
                {
                    b.Property<Guid>("UserDataId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_data_id");

                    b.Property<string>("FatherName")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("father_name");

                    b.Property<string>("FirstName")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("last_name");

                    b.Property<string>("UserDataClass")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("user_data_class");

                    b.HasKey("UserDataId")
                        .HasName("user_data_pkey");

                    b.ToTable("user_data", (string)null);
                });

            modelBuilder.Entity("Hackathon.Models.UserLogin", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("Identifier")
                        .HasColumnType("jsonb")
                        .HasColumnName("identifier");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("user_login_pkey");

                    b.ToTable("user_login", (string)null);
                });

            modelBuilder.Entity("Hackathon.Models.Lecture", b =>
                {
                    b.HasOne("Hackathon.Models.Course", "Course")
                        .WithMany("Lectures")
                        .HasForeignKey("CourseId")
                        .IsRequired()
                        .HasConstraintName("lecture_course_id_fkey");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Hackathon.Models.SessionHandler", b =>
                {
                    b.HasOne("Hackathon.Models.UserLogin", "User")
                        .WithMany("SessionHandlers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("session_handler_user_id_fkey");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hackathon.Models.Course", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("Hackathon.Models.UserLogin", b =>
                {
                    b.Navigation("SessionHandlers");
                });
#pragma warning restore 612, 618
        }
    }
}
