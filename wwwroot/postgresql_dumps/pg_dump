--
-- PostgreSQL database dump
--

-- Dumped from database version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)
-- Dumped by pg_dump version 14.5 (Ubuntu 14.5-0ubuntu0.22.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: hackathon_db; Type: DATABASE; Schema: -; Owner: postgres
--

CREATE DATABASE hackathon_db WITH TEMPLATE = template0 ENCODING = 'UTF8' LOCALE = 'ru_RU.UTF-8';


ALTER DATABASE hackathon_db OWNER TO postgres;

\connect hackathon_db

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: remove_token_after_day(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.remove_token_after_day() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
        DELETE FROM session_handler WHERE start_time >= current_timestamp + make_interval(days := 1);
    END;
$$;


ALTER FUNCTION public.remove_token_after_day() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: course; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.course (
    course_id uuid NOT NULL,
    title text,
    description text
);


ALTER TABLE public.course OWNER TO postgres;

--
-- Name: lecture; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.lecture (
    lecture_id uuid NOT NULL,
    title text,
    description text,
    lect_date timestamp without time zone,
    course_id uuid NOT NULL
);


ALTER TABLE public.lecture OWNER TO postgres;

--
-- Name: session_handler; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.session_handler (
    session_id uuid NOT NULL,
    user_jwt text NOT NULL,
    user_id uuid NOT NULL,
    start_time timestamp without time zone DEFAULT now() NOT NULL
);


ALTER TABLE public.session_handler OWNER TO postgres;

--
-- Name: user_data; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_data (
    user_data_id uuid NOT NULL,
    first_name character varying(45),
    last_name character varying(45),
    father_name character varying(45),
    user_data_class character varying(45)
);


ALTER TABLE public.user_data OWNER TO postgres;

--
-- Name: user_login; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_login (
    user_id uuid NOT NULL,
    username character varying(32) NOT NULL,
    password bytea NOT NULL,
    identifier jsonb
);


ALTER TABLE public.user_login OWNER TO postgres;

--
-- Data for Name: course; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.course (course_id, title, description) FROM stdin;
\.


--
-- Data for Name: lecture; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.lecture (lecture_id, title, description, lect_date, course_id) FROM stdin;
\.


--
-- Data for Name: session_handler; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.session_handler (session_id, user_jwt, user_id, start_time) FROM stdin;
\.


--
-- Data for Name: user_data; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_data (user_data_id, first_name, last_name, father_name, user_data_class) FROM stdin;
\.


--
-- Data for Name: user_login; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_login (user_id, username, password, identifier) FROM stdin;
\.


--
-- Name: course course_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.course
    ADD CONSTRAINT course_pkey PRIMARY KEY (course_id);


--
-- Name: lecture lecture_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lecture
    ADD CONSTRAINT lecture_pkey PRIMARY KEY (lecture_id);


--
-- Name: session_handler session_handler_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session_handler
    ADD CONSTRAINT session_handler_pkey PRIMARY KEY (session_id);


--
-- Name: user_data user_data_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_data
    ADD CONSTRAINT user_data_pkey PRIMARY KEY (user_data_id);


--
-- Name: user_login user_login_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_login
    ADD CONSTRAINT user_login_pkey PRIMARY KEY (user_id);


--
-- Name: session_handler jwt_expr; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER jwt_expr AFTER INSERT OR UPDATE ON public.session_handler FOR EACH STATEMENT EXECUTE FUNCTION public.remove_token_after_day();


--
-- Name: lecture lecture_course_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.lecture
    ADD CONSTRAINT lecture_course_id_fkey FOREIGN KEY (course_id) REFERENCES public.course(course_id);


--
-- Name: session_handler session_handler_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.session_handler
    ADD CONSTRAINT session_handler_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_login(user_id);


--
-- PostgreSQL database dump complete
--

